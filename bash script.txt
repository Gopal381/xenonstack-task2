#!/bin/bash

VERSION="v0.1.0"

show_help() {
    echo "Usage: sysopctl [command] [options]"
    echo ""
    echo "Commands:"
    echo "  service list       - List all active services"
    echo "  system load        - Display current system load"
    echo "  service start NAME - Start a specified service"
    echo "  service stop NAME  - Stop a specified service"
    echo "  disk usage         - Show disk usage information"
    echo "  process monitor    - Monitor system processes"
    echo "  logs analyze       - Analyze system logs"
    echo "  backup PATH        - Backup system files"
    echo ""
    echo "Options:"
    echo "  --version          - Show version information"
    echo "  --help             - Show this help message"
}

list_services() {
    echo "Listing active services:"
    systemctl list-units --type=service --state=running
}

show_load() {
    uptime
}

start_service() {
    if systemctl start "$1"; then
        echo "Service $1 started successfully."
    else
        echo "Failed to start service $1."
    fi
}

stop_service() {
    if systemctl stop "$1"; then
        echo "Service $1 stopped successfully."
    else
        echo "Failed to stop service $1."
    fi
}

check_disk_usage() {
    df -h
}

monitor_processes() {
    top
}

analyze_logs() {
    journalctl -e
}

backup_files() {
    if [[ -d "$1" ]]; then
        rsync -av --progress "$1" /path/to/backup/location
    else
        echo "Invalid path for backup: $1"
        return 1
    fi
}

# Main logic
case "$1" in
    service)
        if [ "$2" == "list" ]; then
            list_services
        elif [ "$2" == "start" ] && [ -n "$3" ]; then
            start_service "$3"
        elif [ "$2" == "stop" ] && [ -n "$3" ]; then
            stop_service "$3"
        else
            echo "Invalid service command"
            exit 1
        fi
        ;;
    system)
        if [ "$2" == "load" ]; then
            show_load
        else
            echo "Invalid system command"
            exit 1
        fi
        ;;
    disk)
        if [ "$2" == "usage" ]; then
            check_disk_usage
        else
            echo "Invalid disk command"
            exit 1
        fi
        ;;
    process)
        if [ "$2" == "monitor" ]; then
            monitor_processes
        else
            echo "Invalid process command"
            exit 1
        fi
        ;;
    logs)
        if [ "$2" == "analyze" ]; then
            analyze_logs
        else
            echo "Invalid logs command"
            exit 1
        fi
        ;;
    backup)
        if [ -n "$2" ]; then
            backup_files "$2"
        else
            echo "Please provide a path for backup"
            exit 1
        fi
        ;;
    --version)
        echo "sysopctl $VERSION"
        ;;
    --help)
        show_help
        ;;
    *)
        echo "Invalid command"
        show_help
        exit 1
        ;;
esac